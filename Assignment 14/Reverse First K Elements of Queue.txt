3. Reverse First K Elements of Queue
Problem:
 Given an integer k and a queue of integers, reverse the order of the first k elements of the queue.
Input:
 Queue: 1 2 3 4 5, k = 3
 Output:
 3 2 1 4 5

import java.util.*;
public class ReverseKElements {
    public static void reverseFirstK(Queue<Integer> queue, int k) {
        if (queue == null || k <= 0 || k > queue.size()) {
            System.out.println("Invalid input");
            return;
        }
        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < k; i++) {
            stack.push(queue.poll());
        }
        while (!stack.isEmpty()) {
            queue.add(stack.pop());
        }
        int size = queue.size();
        for (int i = 0; i < size - k; i++) {
            queue.add(queue.poll());
        }
    }
    public static void main(String[] args) {
        Queue<Integer> queue = new LinkedList<>();
        queue.add(1);
        queue.add(2);
        queue.add(3);
        queue.add(4);
        queue.add(5);
        int k = 3;
        System.out.println("Original Queue: " + queue);
        reverseFirstK(queue, k);
        System.out.println("Queue after reversing first " + k + " elements: " + queue);
    }
}